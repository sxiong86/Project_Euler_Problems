/*
 * Name: Sean Xiong
 * Site: Project Euler
 * Problem 2 - Even Fibonacci Numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
public class Problem02 {

	public static void main(String[] args) {
		
		//Variables for Fibonacci terms
		int term1 = 0;
		int term2 = 1;
		int sum = 0;
		
		//Calculates all Fibonacci terms not exceeding 4,000,000
		System.out.println("All Fibonacci terms not exceeding 4,000,000:");		
		for(int i = 0; i <= 4000000; i ++) {
			i = term1 + term2; //Previous term + Current term
			term1 = term2;     //Current term saved for next calculation (Now previous term)
			term2 = i; 		 //New term saved for next calculation (Now current term)
			
			//Prints Fibonacci term only if less than or equals to 4,000,000
			if(term2 <= 4000000) {
				System.out.print(i + " ");
			}
			
			//Retrieves only even-valued Fibonacci terms and add to sum
			 if(i % 2 == 0) {
				sum = sum + i;
			}
		}
		//Prints sum of the even-valued Fibonacci terms
		System.out.println("\nSum of the even-valued Fibonacci terms:\n" + sum);
		
	}

}
